upstream dagger{   
    server 127.0.0.1:5000 max_fails=3 fail_timeout=30s;
}
server {
    listen          80;
    server_name     customer-dev1.tigerbrokers.com;
    client_max_body_size 50M;
    access_log  /data0/logs/nginx/customer.tigerbrokers.com.access.log main;
    error_log /data0/logs/nginx/customer.tigerbrokers.com.error.log;

    include whitelist/common.conf;
    location / {
        root /data0/codes/tigerworkflow/;
        proxy_next_upstream     error timeout invalid_header http_500;
        proxy_connect_timeout   2;
    }
    
    location ^~ /v2/ {
        alias /data0/codes/tigerworkflow/;
    }

    location /img/ {
        internal;
        alias /data0/upload/files/;
        error_page 404 =200 @backend;
    }

    location ^~ /static/ {
        #internal;
        #root /data0/codes/dagger/;
        root /data0/codes/tigerworkflow/;
        if ($query_string) {
            expires max;
        }
        error_page 404 =200 @backend;
    }

    location @backend {
        rewrite /static/(.*)$  /api/v1/static/static/$1  break;
        rewrite ^~/(.*)$    /api/v1/static/static/$1 break;
        rewrite /img/(.*)$  /api/v1/static/img/$1  break;
        proxy_set_header   Host customer-dev1.tigerbrokers.com;
        proxy_pass http://dagger;
        proxy_redirect      off;
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /api {
        proxy_pass http://dagger;
        # limit_req zone=one burst=5 nodelay;
        # limit_conn addr 20;
        proxy_pass_header Server;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_set_header X-Real_IP $remote_addr;
        proxy_set_header X-Scheme $scheme;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}

